{ config, pkgs, host, lib, inputs, nixDirectory, userconf, ... }:

let
  # Load user-specific variables
  userVars = import ./variables/user-var.nix;
  inherit (userVars) username gitUsername gitEmail keyboardLayout;
in
{
  imports = [
    # Host-specific hardware configuration (autogenerated)
    ./hardware-configuration.nix

    # Host-specific extra packages
    ./system-packages.nix

    # System-level user definition
    ./user.nix

    # Base and global modules
    ../../../Modules/all-Modules.nix

    # Home Manager integration
    inputs.home-manager.nixosModules.home-manager

    # Temp:
    # Surface-specific hardware config
    ../../../Modules/Imported/System/Hardware/Surface/Custom-Kernel.nix
  
  ];

  ################################################################
  # Feature Toggles
  ################################################################

  # Enable Custom Kernel for MS Surface
  # If you don't want to set this modify: gitdir/Modules/Imported/System/all-Sytem.nix or leave it false
  #ms-surface-custom-kernel.enable = false;

  # Enable desktop environment
  kde.enable = true;

  # Optional features
  steam.enable = false;
  openssh.enable = true;
  cliTools.enable = true;
  zsh.enable = true;
  vm.enable = false;

  # Docker support (disabled by default)
  docker = {
    enable = false;
    rootless = false;
    podman = false;
  };

  # Remote management options (disabled by default)
  remoteManage = {
    enable = false;
    teamviewer.enable = false;
    rustdesk.enable = false;
  };

  ################################################################
  # Enable Stylix
  ################################################################

  stylix.enable = true; 

  ################################################################
  # Home Manager Configuration
  ################################################################

  home-manager = {
    useGlobalPkgs = true; # You have set either `nixpkgs.config` or `nixpkgs.overlays` while using `home-manager.useGlobalPkgs`. This will soon not be possible. Please remove all `nixpkgs` options when using `home-manager.useGlobalPkgs`.
    useUserPackages = true;
    backupFileExtension = "preHMbackup";

    users.${username} = import ./home/home.nix {
      inherit config nixDirectory;
    };
  };

  ################################################################
  # Bootloader
  ################################################################

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;


  system.stateVersion = "25.05";
}
